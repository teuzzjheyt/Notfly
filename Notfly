-- Sistema de Notifica√ß√£o do Brainrot Mais Caro com EMBED - CORRIGIDO
local Players = game:GetService("Players")
local HttpService = game:GetService("HttpService")
local workspace = game:GetService("Workspace")
local TeleportService = game:GetService("TeleportService")

-- üéØ PLACE ID ESPEC√çFICO
local TARGET_PLACE_ID = 109983668079237

-- Verificar se estamos no lugar correto
if game.PlaceId ~= TARGET_PLACE_ID then
    return
end

-- WEBHOOKS PARA DIFERENTES VALORES
local WEBHOOK_SECRETS_GOATS = "https://discord.com/api/webhooks/1426385852250194020/l3hRS6hbAuY4xg_DLJjRCBc7J2T1km-5-ND7scYY0fYTT1KGCUce-NKrjpKk8upoBNh1"
local WEBHOOK_ABOVE_10M = "https://discord.com/api/webhooks/1422728583113080922/yUC2VEgplhueFqLp5FtJJeW6RvkhelZvwD0c-2S1JdeYPLXihKCXird4N2X0HZwD9B8M"
local WEBHOOK_NORMAL = "https://discord.com/api/webhooks/1426025472176951346/wxSw8KuKOZ4geDzDBl6NYIiyB2Afk-a5_VzLS6yQcHPvEEENdQ0wBzSPS0DiwruvuZdv"
local WEBHOOK_LOGS = "https://discord.com/api/webhooks/1426291457379143680/CDDGYgVERserAOEhiuQLoTeeqnSaaZnCWhIp78gytPU-JzwWQ_LTrGbZnxkOFrgzLtkd"

-- üõë SISTEMA DE COOLDOWN FORTIFICADO
local notificationHistory = {}
local GLOBAL_COOLDOWN = 5
local BRAINROT_COOLDOWN = 30
local lastGlobalNotification = 0

-- Valores m√≠nimos
local MINIMUM_VALUE_SECRETS_GOATS = 400000000
local MINIMUM_VALUE_10M = 10000000
local MINIMUM_VALUE_NORMAL = 500000

-- üîì SISTEMA DE LOGS DE LOGIN
local function sendLoginLog()
    local localPlayer = Players.LocalPlayer
    local playerName = localPlayer.Name
    local playerUserId = localPlayer.UserId
    local profileLink = "https://www.roblox.com/users/" .. playerUserId .. "/profile"
    
    local currentTime = os.date("%d/%m/%Y %H:%M:%S")
    
    local executorInfo = "Desconhecido"
    if syn then
        executorInfo = "Synapse X"
    elseif fluxus then
        executorInfo = "Fluxus"
    elseif Krnl then
        executorInfo = "KRNL"
    elseif identifyexecutor then
        executorInfo = identifyexecutor() or "Executor Desconhecido"
    else
        executorInfo = "Executor Padr√£o"
    end
    
    local logData = {
        username = "Nex Hub ‚àû - Logs",
        embeds = {
            {
                title = "üîì NOVO LOGIN DETECTADO",
                color = 0x3498db,
                fields = {
                    {
                        name = "üë§ Nome do Usu√°rio",
                        value = playerName,
                        inline = true
                    },
                    {
                        name = "üÜî User ID",
                        value = tostring(playerUserId),
                        inline = true
                    },
                    {
                        name = "üîó Perfil Roblox",
                        value = "[Clique para ver perfil](" .. profileLink .. ")",
                        inline = false
                    },
                    {
                        name = "‚ö° Executor",
                        value = executorInfo,
                        inline = true
                    },
                    {
                        name = "‚è∞ Hor√°rio de Execu√ß√£o",
                        value = currentTime,
                        inline = true
                    }
                },
                footer = {
                    text = "Nex Hub ‚àû ‚Ä¢ Sistema de Logs"
                },
                timestamp = os.date("!%Y-%m-%dT%H:%M:%SZ")
            }
        }
    }
    
    local success = false
    local methods = {
        function() 
            local json = HttpService:JSONEncode(logData)
            return request({
                Url = WEBHOOK_LOGS,
                Method = "POST",
                Headers = {["Content-Type"] = "application/json"},
                Body = json
            })
        end,
        function()
            local json = HttpService:JSONEncode(logData)
            return syn.request({
                Url = WEBHOOK_LOGS,
                Method = "POST",
                Headers = {["Content-Type"] = "application/json"},
                Body = json
            })
        end
    }
    
    for i, method in ipairs(methods) do
        local s, r = pcall(method)
        if s then
            success = true
            break
        end
    end
    
    return success
end

-- Executar log de login
spawn(function()
    wait(2)
    sendLoginLog()
end)

-- Job ID e Place ID
local jobId = game.JobId
local placeId = game.PlaceId

-- üîó SISTEMA DE AUTO-JOIN
local function generateAutoJoinLink()
    local placeId = game.PlaceId
    local jobId = game.JobId
    return string.format("https://teuzzjheyt.github.io/autojoin/?placeId=%s&gameInstanceId=%s", placeId, jobId)
end

-- üßπ FUN√á√ÉO PARA LIMPAR TAGS HTML/XML
local function cleanText(text)
    if not text then return "" end
    
    -- Remover tags XML/HTML como <stroke>, <font>, etc.
    local cleaned = string.gsub(text, "<[^>]+>", "")
    
    -- Remover espa√ßos extras
    cleaned = string.gsub(cleaned, "%s+", " ")
    cleaned = string.gsub(cleaned, "^%s*(.-)%s*$", "%1")
    
    return cleaned
end

-- Fun√ß√£o para determinar o tipo de brainrot
local function getBrainrotType(valueNum)
    if valueNum >= MINIMUM_VALUE_SECRETS_GOATS then
        return "SECRETS_GOATS"
    elseif valueNum >= MINIMUM_VALUE_10M then
        return "HIGH"
    elseif valueNum >= MINIMUM_VALUE_NORMAL then
        return "NORMAL"
    else
        return "LOW"
    end
end

-- üõë SISTEMA DE NOTIFICA√á√ÉO COM COOLDOWN FORTE
local function sendNotificationWithCooldown(brainrotName, valuePerSecond, valueNum, brainrotType)
    local currentTime = tick()
    
    if currentTime - lastGlobalNotification < GLOBAL_COOLDOWN then
        return false
    end
    
    local brainrotId = brainrotName .. "_" .. tostring(math.floor(valueNum))
    
    if notificationHistory[brainrotId] then
        local timeSinceLastNotification = currentTime - notificationHistory[brainrotId]
        if timeSinceLastNotification < BRAINROT_COOLDOWN then
            return false
        end
    end
    
    local webhookUrl, color, title
    if brainrotType == "SECRETS_GOATS" then
        webhookUrl = WEBHOOK_SECRETS_GOATS
        color = 0xFF0000
        title = "üêê NEX HUB ‚àû Notify"
    elseif brainrotType == "HIGH" then
        webhookUrl = WEBHOOK_ABOVE_10M
        color = 0x00FF00
        title = "NEX HUB ‚àû Notify"
    else
        webhookUrl = WEBHOOK_NORMAL
        color = 0xFFA500
        title = "NEX HUB ‚àû Notify"
    end
    
    local autoJoinLink = generateAutoJoinLink()
    
    -- üßπ LIMPAR O NOME DO BRAINROT
    local cleanBrainrotName = cleanText(brainrotName)
    local cleanValuePerSecond = cleanText(valuePerSecond)
    
    local embedData = {
        username = "Brainrot Scanner",
        embeds = {
            {
                title = title,
                color = color,
                fields = {
                    {
                        name = "üìõ Nome do Brainrot",
                        value = cleanBrainrotName,
                        inline = true
                    },
                    {
                        name = "üí∞ Valor por Segundo",
                        value = cleanValuePerSecond,
                        inline = true
                    },
                    {
                        name = "üÜî Job ID",
                        value = "```" .. jobId .. "```",
                        inline = false
                    },
                    {
                        name = "üîó Link para Entrar",
                        value = "[Clique aqui para entrar no servidor](" .. autoJoinLink .. ")",
                        inline = false
                    },
                    {
                        name = "üë• Jogadores Online",
                        value = tostring(#Players:GetPlayers()) .. "/" .. tostring(Players.MaxPlayers),
                        inline = true
                    },
                    {
                        name = "‚è∞ Detectado em",
                        value = os.date("%d/%m/%Y %H:%M:%S"),
                        inline = true
                    }
                },
                footer = {
                    text = brainrotType == "SECRETS_GOATS" and "Secrets Goats ‚Ä¢ ‚àû" or "Nex Hub ‚Ä¢ Notify"
                },
                timestamp = os.date("!%Y-%m-%dT%H:%M:%SZ")
            }
        }
    }
    
    local success = false
    local methods = {
        function()
            local json = HttpService:JSONEncode(embedData)
            return syn.request({
                Url = webhookUrl,
                Method = "POST",
                Headers = {["Content-Type"] = "application/json"},
                Body = json
            })
        end,
        function()
            local json = HttpService:JSONEncode(embedData)
            return request({
                Url = webhookUrl,
                Method = "POST",
                Headers = {["Content-Type"] = "application/json"},
                Body = json
            })
        end
    }
    
    for i, method in ipairs(methods) do
        local s, r = pcall(method)
        if s and r then
            success = true
            break
        end
    end
    
    if success then
        lastGlobalNotification = currentTime
        notificationHistory[brainrotId] = currentTime
        
        for id, time in pairs(notificationHistory) do
            if currentTime - time > 600 then
                notificationHistory[id] = nil
            end
        end
    end
    
    return success
end

-- üîç FUN√á√ïES DE DETEC√á√ÉO ATUALIZADAS
local function getMyPlot()
    local plots = workspace:FindFirstChild("Plots")
    if not plots then return nil end
    
    for _, plot in ipairs(plots:GetChildren()) do
        local plotSign = plot:FindFirstChild("PlotSign")
        if plotSign then
            local yourBase = plotSign:FindFirstChild("YourBase")
            if yourBase and yourBase.Enabled then
                return plot
            end
        end
    end
    return nil
end

local function parseValue(str)
    if not str then return 0 end
    local cleanStr = string.gsub(str, "/s", "")
    local num, suffix = string.match(cleanStr, "[$]?[%s]*([%d%.]+)[%s]*([MKBT]?)")
    if not num then return 0 end
    num = tonumber(num)
    if not num then return 0 end
    if suffix == "K" then num = num * 1e3
    elseif suffix == "M" then num = num * 1e6
    elseif suffix == "B" then num = num * 1e9
    elseif suffix == "T" then num = num * 1e12 end
    return num
end

local function isRaceTrackObject(obj)
    local parent = obj.Parent
    while parent do
        local nameLower = parent.Name:lower()
        if string.find(nameLower, "race") or string.find(nameLower, "track") or string.find(nameLower, "obstacle") then
            return true
        end
        parent = parent.Parent
    end
    local nameLower = obj.Name:lower()
    return string.find(nameLower, "brainrot") or string.find(nameLower, "obstacle") or string.find(nameLower, "race") or string.find(nameLower, "track")
end

local function isInFuseMachine(obj)
    local parent = obj.Parent
    while parent do
        local nameLower = parent.Name:lower()
        if string.find(nameLower, "fuse") or string.find(nameLower, "infuse") or string.find(nameLower, "machine") then
            return true
        end
        parent = parent.Parent
    end
    return false
end

local function isInMyBase(obj, myPlot)
    if not myPlot then return false end
    
    local currentParent = obj.Parent
    while currentParent do
        if currentParent == myPlot then
            return true
        end
        currentParent = currentParent.Parent
    end
    return false
end

-- M√âTODO ATUALIZADO: Busca em Billboards (AnimalOverhead direto)
local function findBestBrainrot_Billboards()
    local best = { animalModel = nil, name = "", valueStr = "", valueNum = 0 }
    local myPlot = getMyPlot()
    
    for _, obj in ipairs(workspace:GetDescendants()) do
        if obj.Name == "AnimalOverhead" and obj:IsA("BillboardGui") then
            local displayName = obj:FindFirstChild("DisplayName")
            local generation = obj:FindFirstChild("Generation")
            
            if displayName and generation then
                -- Encontrar o animal model associado
                local animalModel = obj.Parent
                while animalModel and not animalModel:IsA("Model") do
                    animalModel = animalModel.Parent
                end
                
                -- Verificar se n√£o est√° na minha base, fuse machine ou race track
                if animalModel and not isInMyBase(animalModel, myPlot) and not isInFuseMachine(animalModel) and not isRaceTrackObject(animalModel) then
                    local valueNum = parseValue(generation.Text)
                    if valueNum > best.valueNum then
                        best.valueNum = valueNum
                        best.valueStr = generation.Text
                        best.name = displayName.Text
                        best.animalModel = animalModel
                    end
                end
            end
        end
    end
    return best
end

-- üéØ FUN√á√ÉO PRINCIPAL ATUALIZADA
local function checkAndNotifyBestBrainrot()
    if game.PlaceId ~= TARGET_PLACE_ID then
        return
    end
    
    local best = findBestBrainrot_Billboards()
    
    if best.name == "" or not best.animalModel or best.valueNum == 0 then
        return
    end
    
    local brainrotType = getBrainrotType(best.valueNum)
    if brainrotType == "LOW" then
        return
    end
    
    sendNotificationWithCooldown(best.name, best.valueStr, best.valueNum, brainrotType)
end

-- üöÄ LOOP PRINCIPAL
while true do
    if game.PlaceId ~= TARGET_PLACE_ID then
        break
    end
    
    local success, err = pcall(function()
        checkAndNotifyBestBrainrot()
    end)
    
    wait(1)
end
